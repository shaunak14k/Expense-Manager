/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;
import javax.swing.*;
import java.sql.*;
import ProjectDatabaseConnection.ConnectionProvider;
import java.awt.Component;
import java.text.SimpleDateFormat;
//import net.proteanit.sql.DbUtils;
import javax.swing.JOptionPane;

import java.awt.Container;
import static java.lang.Character.isDigit;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.plaf.ColorUIResource;
import javax.swing.plaf.basic.BasicInternalFrameUI;
/**
 *
 * @author shaun
 */
public class SignUp extends javax.swing.JFrame {

    /** Creates new form SignUp */
    public SignUp() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        evaluatorArc2D1 = new org.jdesktop.swing.animation.timing.evaluators.EvaluatorArc2D();
        jPanel2 = new javax.swing.JPanel();
        createPasswordCheckBox = new javax.swing.JCheckBox();
        nameTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        createPasswordField = new javax.swing.JPasswordField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        signUpButton1 = new necesario.RSMaterialButtonCircle();
        signInButton = new necesario.RSMaterialButtonCircle();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        signUpEmailTextField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        confirmPasswordField = new javax.swing.JPasswordField();
        confirmPasswordCheckBox = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1360, 750));
        setMinimumSize(new java.awt.Dimension(1360, 750));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        createPasswordCheckBox.setBackground(new java.awt.Color(51, 51, 51));
        createPasswordCheckBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        createPasswordCheckBox.setToolTipText("");
        createPasswordCheckBox.setMargin(new java.awt.Insets(5, 5, 5, 5));
        createPasswordCheckBox.setMaximumSize(new java.awt.Dimension(40, 40));
        createPasswordCheckBox.setMinimumSize(new java.awt.Dimension(40, 40));
        createPasswordCheckBox.setPreferredSize(new java.awt.Dimension(40, 40));
        createPasswordCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createPasswordCheckBoxActionPerformed(evt);
            }
        });
        jPanel2.add(createPasswordCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 380, 30, 30));

        nameTextField.setBackground(new java.awt.Color(51, 51, 51));
        nameTextField.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        nameTextField.setForeground(new java.awt.Color(255, 255, 255));
        nameTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        jPanel2.add(nameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, 290, 30));

        jLabel10.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/icons8_Secure_50px.png"))); // NOI18N
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 360, 50, 50));

        jLabel9.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("CREATE PASSWORD");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 340, 160, 40));

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Create a New Account Here");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, -1, 30));

        jLabel6.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Welcome !");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40, -1, 30));

        createPasswordField.setBackground(new java.awt.Color(51, 51, 51));
        createPasswordField.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        createPasswordField.setForeground(new java.awt.Color(255, 255, 255));
        createPasswordField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        jPanel2.add(createPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 380, 290, 30));

        jLabel11.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("NAME");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, 150, 40));

        jLabel12.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/icons8_Account_50px.png"))); // NOI18N
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 60, 60));

        signUpButton1.setBackground(new java.awt.Color(255, 51, 51));
        signUpButton1.setText("SIGN UP");
        signUpButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(signUpButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 580, 360, 70));

        signInButton.setBackground(new java.awt.Color(81, 81, 253));
        signInButton.setText("LOG IN");
        signInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signInButtonActionPerformed(evt);
            }
        });
        jPanel2.add(signInButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 660, 360, 70));

        jLabel13.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/icons8_Secured_Letter_50px.png"))); // NOI18N
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, 50, 50));

        jLabel14.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("EMAIL");
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, 150, 40));

        signUpEmailTextField.setBackground(new java.awt.Color(51, 51, 51));
        signUpEmailTextField.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        signUpEmailTextField.setForeground(new java.awt.Color(255, 255, 255));
        signUpEmailTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        jPanel2.add(signUpEmailTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 280, 290, 30));

        jLabel15.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("CONFIRM PASSWORD");
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 450, 160, 40));

        jLabel16.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/icons8_Secure_50px.png"))); // NOI18N
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 470, 50, 50));

        confirmPasswordField.setBackground(new java.awt.Color(51, 51, 51));
        confirmPasswordField.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        confirmPasswordField.setForeground(new java.awt.Color(255, 255, 255));
        confirmPasswordField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        confirmPasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmPasswordFieldActionPerformed(evt);
            }
        });
        jPanel2.add(confirmPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 490, 290, 30));

        confirmPasswordCheckBox.setBackground(new java.awt.Color(51, 51, 51));
        confirmPasswordCheckBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        confirmPasswordCheckBox.setMargin(new java.awt.Insets(5, 5, 5, 5));
        confirmPasswordCheckBox.setMaximumSize(new java.awt.Dimension(40, 40));
        confirmPasswordCheckBox.setMinimumSize(new java.awt.Dimension(40, 40));
        confirmPasswordCheckBox.setPreferredSize(new java.awt.Dimension(40, 40));
        confirmPasswordCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmPasswordCheckBoxActionPerformed(evt);
            }
        });
        jPanel2.add(confirmPasswordCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 490, 30, 30));

        jLabel7.setBackground(new java.awt.Color(0, 0, 0));
        jLabel7.setFont(new java.awt.Font("Verdana", 1, 30)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("X");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 0, 40, 40));

        jLabel17.setBackground(new java.awt.Color(255, 0, 51));
        jLabel17.setFont(new java.awt.Font("Verdana", 1, 30)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 0, 0));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("X");
        jLabel17.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel17MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 0, 40, 40));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("_");
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 50, 50));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 0, 480, 750));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setAutoscrolls(true);
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel1ComponentShown(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Sitka Small", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 153));
        jLabel1.setText("Expense Manager");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 90, 370, 40));

        jLabel3.setFont(new java.awt.Font("Sitka Small", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 51, 51));
        jLabel3.setText("Welcome To");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 50, -1, 30));

        jLabel8.setFont(new java.awt.Font("Sitka Small", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 51, 51));
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/Time-Expense-Tracking.png"))); // NOI18N
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, 710, 620));

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 100));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 740, 880, 10));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 100));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 10, 730));

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 199));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 880, 10));

        jSeparator4.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator4.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 100));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 10, 20, 730));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 880, 750));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void createPasswordCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createPasswordCheckBoxActionPerformed
        // TODO add your handling code here:

        char[] pass = createPasswordField.getPassword();

        if(createPasswordCheckBox.isSelected())
            createPasswordField.setEchoChar((char)0);
        else
            createPasswordField.setEchoChar('*');

    }//GEN-LAST:event_createPasswordCheckBoxActionPerformed

    private void signUpButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signUpButton1ActionPerformed
        // TODO add your handling code here:

        String signUpName = nameTextField.getText();
        String signUpEmail = signUpEmailTextField.getText();

        String createPassword = String.valueOf(createPasswordField.getPassword());
        String confirmPassword = String.valueOf(confirmPasswordField.getPassword());

        try
        {
            //Check if all fields are filled
            if(signUpName.equals("") || signUpEmail.equals("") || createPassword.equals("") || confirmPassword.equals(""))
            {
                throw new NullFieldException();
            }
            
            
            // *********** VALIDATE EMAIL
            //String regex = "^(.+)@(.+)$";  
            String regex = "^[a-zA-Z0-9+_-]+@[a-zA-Z0-9]+.+[a-z]$";
            //Compile regular expression to get the pattern  
            Pattern pattern = Pattern.compile(regex);  
            //Iterate emails array list  
            //Create instance of matcher   
            Matcher emailMatcher = pattern.matcher(signUpEmail);  
            if(!emailMatcher.matches())
            {
                throw new InvalidEmailException();
            }
              
            //Check if createPassword is same as ConfrimPassword
            if(!createPassword.equals(confirmPassword))
            {
                throw new PasswordException();
            }

             // ************* VALIDATE PASSWORD
            //String regex = "^(.+)@(.+)$";  
            regex = "^.{8,20}$";  // digit at least once
//                       + "(?=.*[a-z])(?=.*[A-Z])"
//                       + "(?=.*[@#$%^&+=])"
//                       + "(?=\\S+$).{8,20}$";
            //Compile regular expression to get the pattern  
            pattern = Pattern.compile(regex);  
            //Iterate emails array list  
            //Create instance of matcher   
            Matcher passwordMatcher = pattern.matcher(createPassword);  
            if(!passwordMatcher.matches())
            {
                throw new InvalidPasswordException();
            }
            
            Connection con = ConnectionProvider.getCon();
            Statement st;
            st = con.createStatement();
            ResultSet rs;

            //Check for duplicate email
            rs = st.executeQuery("select user_email from User");
            while(rs.next())
            {
                if(rs.getString(1).equals(signUpEmail))
                {
                    throw new SQLIntegrityConstraintViolationException();
                }
            }

            // Add user to table
            st.executeUpdate("insert into User values ('"+signUpName+"','"+signUpEmail+"','"+confirmPassword+"')");

            JOptionPane.showMessageDialog(null, "Succesfully Signed Up");
            //ExpenseManager em = new ExpenseManager();
            //new ExpenseManager().repaint();
            setVisible(false);
            new SignUp().setVisible(true);

        }

        //Fields are null
        catch(NullFieldException e)
        {
            //new NullFieldException();
            
//            UIManager UI = new UIManager();
//            UI.put("OptionPane.background",new ColorUIResource(0,51,102));
//            UI.put("OptionPane.messageForeground",new ColorUIResource(0,51,102));
//            UI.put("OptionPane.",new ColorUIResource(0,51,102));
//            //UI.put("Panel.background",new ColorUIResource(0,51,102));
            
            JOptionPane.showMessageDialog(null,"Please fill all the details");
        }
        
        catch(InvalidEmailException e)
        {
            JOptionPane.showMessageDialog(null, "Please enter a valid Email ");
        }
        
        catch(InvalidPasswordException e)
        {
            JOptionPane.showMessageDialog(null, "Password must contain at minimum 8 and maximum 20 characters ");
        }

        //Contact number is not right
        catch(PasswordException e)
        {
            JOptionPane.showMessageDialog(null,"Passwords do not match");
        }

        //Duplicate username
        catch (SQLIntegrityConstraintViolationException e)
        {
            JOptionPane.showMessageDialog(null, "This email is alerady taken");
        }

        //Stop Process and DO NOTHING
        //catch(StopProcessException e){}

        //Any other Exceotion
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
            System.out.println(e);
        }
    }//GEN-LAST:event_signUpButton1ActionPerformed

    private void signInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signInButtonActionPerformed
        // TODO add your handling code here:

        dispose();
        new SignUp().setVisible(false);
        new ExpenseManager().setVisible(true);
    }//GEN-LAST:event_signInButtonActionPerformed

    private void confirmPasswordCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmPasswordCheckBoxActionPerformed
        // TODO add your handling code here:
        char[] pass = confirmPasswordField.getPassword();

        if(confirmPasswordCheckBox.isSelected())
            confirmPasswordField.setEchoChar((char)0);
        else
            confirmPasswordField.setEchoChar('*');

    }//GEN-LAST:event_confirmPasswordCheckBoxActionPerformed

    private void confirmPasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmPasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_confirmPasswordFieldActionPerformed

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(new ExpenseManager(),"Sure? You want to exit?", "Expense Manager", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if(result == JOptionPane.YES_OPTION)
        System.exit(0);
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jPanel1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel1ComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1ComponentShown

    private void jLabel17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseClicked
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(new ExpenseManager(),"Sure? You want to exit?", "Expense Manager", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if(result == JOptionPane.YES_OPTION)
        System.exit(0);
    }//GEN-LAST:event_jLabel17MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:

        setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabel4MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignUp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox confirmPasswordCheckBox;
    private javax.swing.JPasswordField confirmPasswordField;
    private javax.swing.JCheckBox createPasswordCheckBox;
    private javax.swing.JPasswordField createPasswordField;
    private org.jdesktop.swing.animation.timing.evaluators.EvaluatorArc2D evaluatorArc2D1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextField nameTextField;
    private necesario.RSMaterialButtonCircle signInButton;
    private necesario.RSMaterialButtonCircle signUpButton1;
    private javax.swing.JTextField signUpEmailTextField;
    // End of variables declaration//GEN-END:variables

    static class StopProcessException extends Exception{}
    static class NullFieldException extends Exception{}
    static class PasswordException extends Exception{}
    static class EmailException extends Exception{}
    static class InvalidEmailException extends Exception{}
    static class InvalidPasswordException extends Exception{}

}
