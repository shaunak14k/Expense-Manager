/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import ProjectDatabaseConnection.ConnectionProvider;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLIntegrityConstraintViolationException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author shaun
 */
public class AddIncome extends javax.swing.JFrame {

    /**
     * Creates new form AddIncome
     */
    
    String signInEmail;
    static int counter = 0;
    
    public AddIncome(String sign_in_email) {
        initComponents();
        
        incomeDateTextField.setEditable(false);
        
        signInEmail = sign_in_email;
        
            
        
//        int income_id=0;
//        // CHECK IF NOT INCOME ENTRIES ARE MADE
//        try
//        {
//            Connection con = ConnectionProvider.getCon();
//            Statement st = con.createStatement();
//            
//            ResultSet rs = st.executeQuery("select max(income_id) from Income");
//            if(rs.next())  //first as it would be possible there is not value present
//            {
//                income_id = rs.getInt(1);
//                income_id = income_id + 1;
//                
//                String str = String.valueOf(income_id);
//                incomeIDLabel.setText(str);
//            }
//            else
//            {
//                System.out.println("HERE ELSE");
//                incomeIDLabel.setText("1");
//            }
//        }
//        catch(Exception e)
//        {
//            System.out.println("HERE");
//            JOptionPane.showMessageDialog(null, e);
//        }
//        
//        // if no entries in income table
//        if(income_id == 1)
//        {
//            incomeDateChooser.setVisible(true);
//            incomeDateTextField.setVisible(false);
//        }
//        else
//        {
//            incomeDateChooser.setVisible(true);
//            incomeDateTextField.setVisible(false);
//
//        }
        
        
        // INCOME TABLE
        try
        {
            Connection con = ConnectionProvider.getCon();
            Statement st;
            st = con.createStatement();
            ResultSet rs;
            
            // INCOME TABLE
            //System.out.println("START : "+summary_start_date);
            rs = st.executeQuery("select income_id as 'Income ID', income_date as Date, income_amount as Amount, income_payer as Payer, income_mode_of_transaction as 'Transaction Mode', income_category as Category from Income where user_email='"+signInEmail+"'");
            incomeSummaryTable.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e)
        {
            System.out.println("HERE");
            JOptionPane.showMessageDialog(null, e);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        incomeDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        incomeDateTextField = new javax.swing.JTextField();
        incomePayerComboBox = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        incomeModeOfTransactionComboBox = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        incomeCategoryComboBox = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        deleteIncomeButton = new rojerusan.RSMaterialButtonCircle();
        addIncomeButton = new rojerusan.RSMaterialButtonCircle();
        updateIncomeButton = new rojerusan.RSMaterialButtonCircle();
        backPanel = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        incomeIDLabel = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        incomeAmountTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        incomeSummaryTable = new rojerusan.RSTableMetro();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        backPanel1 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        totalIncomeLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(340, 210));
        setMinimumSize(new java.awt.Dimension(1360, 750));
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Select any Income Category");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 540, 340, 30));

        incomeDateChooser.setBackground(new java.awt.Color(75, 137, 243));
        incomeDateChooser.setToolTipText("");
        incomeDateChooser.setDateFormatString("yyyy-MM-dd");
        incomeDateChooser.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        incomeDateChooser.setMaxSelectableDate(new java.util.Date(253370748688000L));
        incomeDateChooser.setMinSelectableDate(new java.util.Date(-62135785712000L));
        incomeDateChooser.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                incomeDateChooserPropertyChange(evt);
            }
        });
        jPanel1.add(incomeDateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 130, 40, 30));

        jLabel2.setFont(new java.awt.Font("Verdana", 3, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Rs.");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 240, 30, 30));

        incomeDateTextField.setEditable(false);
        incomeDateTextField.setBackground(new java.awt.Color(51, 51, 51));
        incomeDateTextField.setFont(new java.awt.Font("Verdana", 1, 15)); // NOI18N
        incomeDateTextField.setForeground(new java.awt.Color(255, 255, 255));
        incomeDateTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        incomeDateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incomeDateTextFieldActionPerformed(evt);
            }
        });
        jPanel1.add(incomeDateTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 130, 240, 30));

        incomePayerComboBox.setBackground(new java.awt.Color(75, 137, 243));
        incomePayerComboBox.setFont(new java.awt.Font("Verdana", 3, 15)); // NOI18N
        incomePayerComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bank", "Employer", "Government", "NA", "Other" }));
        incomePayerComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        incomePayerComboBox.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        incomePayerComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incomePayerComboBoxActionPerformed(evt);
            }
        });
        jPanel1.add(incomePayerComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 350, 280, 30));

        jLabel11.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Income Payer ");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 310, 260, 30));

        incomeModeOfTransactionComboBox.setBackground(new java.awt.Color(75, 137, 243));
        incomeModeOfTransactionComboBox.setFont(new java.awt.Font("Verdana", 3, 15)); // NOI18N
        incomeModeOfTransactionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash", "Cheque", "Credit card", "Debit", "Electronic Transfer", " " }));
        incomeModeOfTransactionComboBox.setBorder(null);
        jPanel1.add(incomeModeOfTransactionComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 470, 280, 30));

        jLabel12.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("What was the mode of Transaction ?");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 430, 400, 30));

        incomeCategoryComboBox.setBackground(new java.awt.Color(75, 137, 243));
        incomeCategoryComboBox.setFont(new java.awt.Font("Verdana", 3, 15)); // NOI18N
        incomeCategoryComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Salary", "Equities", "Personal Savings", "Rent and Royalty", "Pension", "Account Transfer", "Other" }));
        jPanel1.add(incomeCategoryComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 580, 280, 30));

        jLabel13.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/bank.png"))); // NOI18N
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, 30, 30));

        jLabel14.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Amount");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 210, 130, 30));

        jLabel16.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/cheque.png"))); // NOI18N
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 470, 30, 30));

        jLabel17.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/salary_category.png"))); // NOI18N
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 580, 30, 30));

        deleteIncomeButton.setBackground(new java.awt.Color(255, 51, 51));
        deleteIncomeButton.setText("DELETE");
        deleteIncomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteIncomeButtonActionPerformed(evt);
            }
        });
        jPanel1.add(deleteIncomeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 660, 140, 60));

        addIncomeButton.setBackground(new java.awt.Color(255, 51, 51));
        addIncomeButton.setText("ADD");
        addIncomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addIncomeButtonActionPerformed(evt);
            }
        });
        jPanel1.add(addIncomeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 660, 140, 60));

        updateIncomeButton.setBackground(new java.awt.Color(255, 51, 51));
        updateIncomeButton.setText("UPDATE");
        updateIncomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateIncomeButtonActionPerformed(evt);
            }
        });
        jPanel1.add(updateIncomeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 660, 140, 60));

        backPanel.setBackground(new java.awt.Color(255, 51, 51));
        backPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backPanelMouseClicked(evt);
            }
        });
        backPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText(" Back");
        backPanel.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, -1, 40));

        jPanel1.add(backPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 80, 40));

        jLabel18.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/calendar.png"))); // NOI18N
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, 30, 30));

        jLabel19.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("When did you recieve the income ? ");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 370, 30));

        incomeIDLabel.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        incomeIDLabel.setForeground(new java.awt.Color(240, 240, 240));
        incomeIDLabel.setText("ID");
        jPanel1.add(incomeIDLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, 40, 30));

        jSeparator4.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator4.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 100));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 0, 10, 760));

        incomeAmountTextField.setBackground(new java.awt.Color(51, 51, 51));
        incomeAmountTextField.setFont(new java.awt.Font("Verdana", 1, 15)); // NOI18N
        incomeAmountTextField.setForeground(new java.awt.Color(255, 255, 255));
        incomeAmountTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        incomeAmountTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incomeAmountTextFieldActionPerformed(evt);
            }
        });
        jPanel1.add(incomeAmountTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, 240, 30));

        jLabel10.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Income ID - ");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, 140, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 750));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Sitka Small", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 0));
        jLabel1.setText("Manage Income");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 50, 270, -1));

        jPanel9.setBackground(new java.awt.Color(255, 102, 102));
        jPanel9.setForeground(new java.awt.Color(255, 102, 102));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel3.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 90, 350, 3));

        incomeSummaryTable.setForeground(new java.awt.Color(102, 102, 255));
        incomeSummaryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Income ID", "Date", "Amount", "Payer", "Mode Of Transaction", "Category"
            }
        ));
        incomeSummaryTable.setColorBackgoundHead(new java.awt.Color(51, 51, 51));
        incomeSummaryTable.setColorBordeFilas(new java.awt.Color(51, 51, 51));
        incomeSummaryTable.setColorFilasBackgound2(new java.awt.Color(255, 255, 255));
        incomeSummaryTable.setEditingColumn(0);
        incomeSummaryTable.setEditingRow(0);
        incomeSummaryTable.setMultipleSeleccion(false);
        incomeSummaryTable.setRowHeight(35);
        incomeSummaryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                incomeSummaryTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(incomeSummaryTable);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 770, 420));

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 199));
        jPanel3.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 880, 10));

        jSeparator6.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator6.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator6.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 100));
        jPanel3.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 0, 20, 750));

        backPanel1.setBackground(new java.awt.Color(255, 51, 51));
        backPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backPanel1MouseClicked(evt);
            }
        });
        backPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel21.setFont(new java.awt.Font("Verdana", 1, 30)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("X");
        backPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 30, 40));

        jPanel3.add(backPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 10, 50, 40));

        jSeparator5.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator5.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 199));
        jPanel3.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 740, 880, 10));

        jSeparator7.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator7.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 199));
        jPanel3.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 880, 10));

        totalIncomeLabel.setBackground(new java.awt.Color(0, 0, 0));
        totalIncomeLabel.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        totalIncomeLabel.setText("Total income");
        jPanel3.add(totalIncomeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 630, 30));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 0, 820, 750));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        
        
        try
        {
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            
            ResultSet rs = st.executeQuery("select max(income_id), SUM(income_amount) from Income");
            if(rs.next())  //first as it would be possible there is not value present
            {
                int news_id = rs.getInt(1);
                news_id = news_id + 1;
                
                String str = String.valueOf(news_id);
                incomeIDLabel.setText(str);
            
                totalIncomeLabel.setText("Total Income : Rs. "+rs.getString(2));
            }
            else
            {
                System.out.println("HERE ELSE");
                incomeIDLabel.setText("1");
            }
        }
        catch(Exception e)
        {
            System.out.println("HERE");
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_formComponentShown

    
    
    private void incomeDateChooserPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_incomeDateChooserPropertyChange
        // TODO add your handling code here:

        String incomeDate = String.valueOf(incomeDateChooser.getDate());
        // FORMAT THE INCOME DATE
        try
        {
            String dateStr = incomeDate;
            DateFormat formatter = new SimpleDateFormat("E MMM dd HH:mm:ss Z yyyy");
            Date date = (Date)formatter.parse(dateStr);
            System.out.println(date);

            Calendar cal = Calendar.getInstance();
            cal.setTime(date);
            String formatedDate = cal.get(Calendar.YEAR) + "-" + (cal.get(Calendar.MONTH) + 1) + "-" +cal.get(Calendar.DATE);
            System.out.println("formatedDate : " + formatedDate);

            incomeDate = formatedDate;

            incomeDateTextField.setText(incomeDate);

            //String formatedDate = cal.get(Calendar.DATE) + "/" + (cal.get(Calendar.MONTH) + 1) + "/" +         cal.get(Calendar.YEAR);
            //System.out.println("formatedDate : " + formatedDate);
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }//GEN-LAST:event_incomeDateChooserPropertyChange

    private void incomeDateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incomeDateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_incomeDateTextFieldActionPerformed

    private void incomePayerComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incomePayerComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_incomePayerComboBoxActionPerformed

    private void deleteIncomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteIncomeButtonActionPerformed
        // TODO add your handling code here:

        int incomeID = Integer.parseInt(incomeIDLabel.getText());

        try
        {
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();

            // Check if there exists any entry
            // Update Income table
            ResultSet rs = st.executeQuery("select * from Income where income_id='"+incomeID+"'");
            if(!rs.next())  //first as it would be possible there is not value present
            {
                JOptionPane.showMessageDialog(null, "No such record exists to delete");
                return;
            }

            // DELETE Income table
            st.executeUpdate("delete from Income where income_id='"+incomeID+"' ");

            // DELETE Transaction table
            st.executeUpdate("delete from Transaction where income_expense_id='"+incomeID+"' ");

            JOptionPane.showMessageDialog(null, "Income details Deleted successfully");
            setVisible(false);
            new AddIncome(signInEmail).setVisible(true);

        }
        //Any other Exceotion
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
            System.out.println(e);
        }
    }//GEN-LAST:event_deleteIncomeButtonActionPerformed

    private void addIncomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addIncomeButtonActionPerformed
        // TODO add your handling code here:

        //        incomeDateTextField.setVisible(false);
        //        incomeDateChooser.setVisible(true);

        //JOptionPane.showMessageDialog(null,"Please enter Income Details now");
        int income_id=0;
        try
        {
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();

            ResultSet rs = st.executeQuery("select max(income_id) from Income");
            if(rs.next())  //first as it would be possible there is not value present
            {
                income_id = rs.getInt(1);
                income_id = income_id + 1;

                //                    String str = String.valueOf(incomeID);
                //                    incomeIDLabel.setText(str);
            }
            else
            {
                System.out.println("HERE ELSE");
                incomeIDLabel.setText("1");
            }
        }
        catch(Exception e)
        {
            System.out.println("HERE");
            JOptionPane.showMessageDialog(null, e);
        }

        if(!incomeIDLabel.getText().equals(String.valueOf(income_id)))
        {
            new AddIncome(signInEmail).setVisible(false);
            new AddIncome(signInEmail).setVisible(true);

            //            incomeDateTextField.setVisible(false);
            //            incomeDateChooser.setVisible(true);

            JOptionPane.showMessageDialog(null,"Please enter Income Details now");

            return;
        }

        //        int result = JOptionPane.showConfirmDialog(new ExpenseManager(),"Sure? You want to Add new Income?", "Expense Manager", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        //
        //        if(result == JOptionPane.NO_OPTION)
        //            return;
        //        else if(result == JOptionPane.YES_OPTION)
        //        {
            //            //counter = 1;
            //
            //            new AddIncome(signInEmail).setVisible(false);
            //            new AddIncome(signInEmail).setVisible(true);
            //
            //            JOptionPane.showMessageDialog(null,"Please enter Income Details now");
            //            int incomeID=0;
            //            try
            //            {
                //                Connection con = ConnectionProvider.getCon();
                //                Statement st = con.createStatement();
                //
                //                ResultSet rs = st.executeQuery("select max(income_id) from Income");
                //                if(rs.next())  //first as it would be possible there is not value present
                //                {
                    //                    incomeID = rs.getInt(1);
                    //                    incomeID = incomeID + 1;
                    //
                    ////                    String str = String.valueOf(incomeID);
                    ////                    incomeIDLabel.setText(str);
                    //                }
                //                else
                //                {
                    //                    System.out.println("HERE ELSE");
                    //                    incomeIDLabel.setText("1");
                    //                }
                //            }
            //            catch(Exception e)
            //            {
                //                System.out.println("HERE");
                //                JOptionPane.showMessageDialog(null, e);
                //            }
            //
            //
            //            if(incomeIDLabel.getText().equals(String.valueOf(incomeID)))
            //            {
                //                new AddIncome(signInEmail).setVisible(false);
                //                new AddIncome(signInEmail).setVisible(true);
                //
                //                JOptionPane.showMessageDialog(null,"Please enter Income Details now");
                //
                //                return;
                //            }
            //            incomeDateTextField.setVisible(false);
            //            incomeDateChooser.setVisible(true);
            //
            //            incomeAmountTextField.setText("");
            //
            //            JOptionPane.showMessageDialog(null,"Please enter Income Details now");
            //
            //            if(counter==0)
            //                return;
            //            else
            //                counter=1;
            //        }
        //        else
        //            return;
        //

        int incomeID = Integer.parseInt(incomeIDLabel.getText());
        String incomeDate = String.valueOf(incomeDateChooser.getDate());
        String incomeAmount = incomeAmountTextField.getText();
        String incomePayer = String.valueOf(incomePayerComboBox.getSelectedItem());
        String incomeModeOfTransaction = String.valueOf(incomeModeOfTransactionComboBox.getSelectedItem());
        String incomeCategory = String.valueOf(incomeCategoryComboBox.getSelectedItem());

        // FORMAT THE INCOME DATE
        try
        {
            String dateStr = incomeDate;
            DateFormat formatter = new SimpleDateFormat("E MMM dd HH:mm:ss Z yyyy");
            Date date = (Date)formatter.parse(dateStr);
            System.out.println(date);

            Calendar cal = Calendar.getInstance();
            cal.setTime(date);
            String formatedDate = cal.get(Calendar.YEAR) + "-" + (cal.get(Calendar.MONTH) + 1) + "-" +cal.get(Calendar.DATE);
            System.out.println("formatedDate : " + formatedDate);

            incomeDate = formatedDate;

            //String formatedDate = cal.get(Calendar.DATE) + "/" + (cal.get(Calendar.MONTH) + 1) + "/" +         cal.get(Calendar.YEAR);
            //System.out.println("formatedDate : " + formatedDate);
        }
        catch(Exception e)
        {
            System.out.println(e);
        }

        System.out.println(incomeID);
        System.out.println(incomeDate);
        System.out.println(incomeAmount);
        System.out.println(incomePayer);
        System.out.println(incomeModeOfTransaction);
        System.out.println(incomeCategory);

        try
        {
            //Check if all fields are filled
            if(incomeDate.equals("") || incomeAmount.equals("") || incomePayer.equals("") || incomeModeOfTransaction.equals("") || incomeCategory.equals(""))
            {
                throw new NullFieldException();
            }

            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();

            st.executeUpdate("insert into Income values ('"+incomeID+"','"+signInEmail+"','"+incomeDate+"','"+incomeAmount+"','"+incomePayer+"','"+incomeModeOfTransaction+"','"+incomeCategory+"')");
            //String query = "insert into Customer "+"values ("

            JOptionPane.showMessageDialog(null, "Successfully added Income Details");

            try
            {
                int transaction_id=0;

                ResultSet rs = st.executeQuery("select max(transaction_id) from Transaction");
                if(rs.next())  //first as it would be possible there is not value present
                {
                    transaction_id = rs.getInt(1);
                    transaction_id = transaction_id + 1;
                }

                Statement st1 = con.createStatement();
                st1.executeUpdate("insert into Transaction values ('"+transaction_id+"','"+signInEmail+"','Income','"+incomeID+"', '"+incomeDate+"','"+incomeAmount+"','"+incomeCategory+"','"+incomePayer+"')");
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
                System.out.println(e);
            }

            setVisible(false);
            new AddIncome(signInEmail).setVisible(true);

        }

        //Fields are null
        catch(NullFieldException e)
        {
            //new NullFieldException();
            JOptionPane.showMessageDialog(null,"Please fill all the details");
        }

        //Any other Exceotion
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
            System.out.println(e);
        }

        counter = 0;

    }//GEN-LAST:event_addIncomeButtonActionPerformed

    private void updateIncomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateIncomeButtonActionPerformed
        // TODO add your handling code here:

        int incomeID = Integer.parseInt(incomeIDLabel.getText());

        // CHECK IF RECORD EXISTS IN TABLE TO UPDATE
        try
        {
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();

            // Update Income table
            ResultSet rs = st.executeQuery("select * from Income where income_id='"+incomeID+"'");

            if(!rs.next())  //first as it would be possible there is not value present
            {
                JOptionPane.showMessageDialog(null, "No such record exists to update");
                return;
            }
            //            setVisible(false);
            //            new AddIncome(signInEmail).setVisible(true);
        }
        catch(Exception e){}

        String income_date = incomeDateTextField.getText();
        String income_amount = incomeAmountTextField.getText();
        String income_payer = String.valueOf(incomePayerComboBox.getSelectedItem());
        String income_mode_of_transaction = String.valueOf(incomeModeOfTransactionComboBox.getSelectedItem());
        String income_category = String.valueOf(incomeCategoryComboBox.getSelectedItem());

        try
        {
            //Check if all fields are filled
            if(income_date.equals("") || income_amount.equals("") || income_payer.equals("") || income_mode_of_transaction.equals("") || income_category.equals(""))
            {
                throw new UpdateProfile.NullFieldException();
            }

            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();

            // Update Income table
            st.executeUpdate("update Income set income_date='"+income_date+"', income_amount='"+income_amount+"', income_payer='"+income_payer+"', income_mode_of_transaction='"+income_mode_of_transaction+"', income_category='"+income_category+"' where income_id = '"+incomeID+"'");

            // Update Transaction table
            st.executeUpdate("update Transaction set transaction_date='"+income_date+"', transaction_amount='"+income_amount+"', transaction_beneficiary='"+income_payer+"', transaction_category='"+income_category+"' where transaction_id = '"+incomeID+"'");

            JOptionPane.showMessageDialog(null, "Income details Updated successfully");
            setVisible(false);
            new AddIncome(signInEmail).setVisible(true);

        }

        //Fields are null
        catch(UpdateProfile.NullFieldException e)
        {
            //new NullFieldException();
            JOptionPane.showMessageDialog(null,"Please fill all the details");
        }

        //Duplicate username
        catch (SQLIntegrityConstraintViolationException e)
        {
            JOptionPane.showMessageDialog(null, "This email is alerady taken");
        }

        //Any other Exceotion
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
            System.out.println(e);
        }

    }//GEN-LAST:event_updateIncomeButtonActionPerformed

    private void backPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backPanelMouseClicked
        // TODO add your handling code here:5

        dispose();
        new AddIncome(signInEmail).setVisible(false);
        new Home(signInEmail).setVisible(true);
    }//GEN-LAST:event_backPanelMouseClicked

    private void incomeAmountTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incomeAmountTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_incomeAmountTextFieldActionPerformed

    private void incomeSummaryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_incomeSummaryTableMouseClicked
        // TODO add your handling code here:
        
        incomeAmountTextField.setEditable(false);
        
        int rowNo = incomeSummaryTable.getSelectedRow();
        TableModel model = incomeSummaryTable.getModel();

        //        incomeDateChooser.setVisible(false);
        //        incomeDateTextField.setVisible(true);

        //tring str = model.getValueAt(rowNo, 1).toString();
        //System.out.println("\n ::_ "+str);
        //SimpleDateFormat dF = new SimpleDateFormat("yyyy-MM-dd");

        incomeIDLabel.setText(model.getValueAt(rowNo,0).toString());
        //incomeDateChooser.setDate(2022/11/11);
        incomeDateTextField.setText(model.getValueAt(rowNo, 1).toString());
        incomeAmountTextField.setText(model.getValueAt(rowNo, 2).toString());
        incomePayerComboBox.setSelectedItem(model.getValueAt(rowNo, 3).toString());
        incomeModeOfTransactionComboBox.setSelectedItem(model.getValueAt(rowNo, 4).toString());
        incomeCategoryComboBox.setSelectedItem(model.getValueAt(rowNo, 5).toString());
        
        //incomeAmountTextField.setEditable(true);

    }//GEN-LAST:event_incomeSummaryTableMouseClicked

    private void backPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backPanel1MouseClicked
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(new ExpenseManager(),"Sure? You want to exit?", "Expense Manager", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if(result == JOptionPane.YES_OPTION)
        System.exit(0);
    }//GEN-LAST:event_backPanel1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddIncome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddIncome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddIncome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddIncome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddIncome("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojerusan.RSMaterialButtonCircle addIncomeButton;
    private javax.swing.JPanel backPanel;
    private javax.swing.JPanel backPanel1;
    private rojerusan.RSMaterialButtonCircle deleteIncomeButton;
    private javax.swing.JTextField incomeAmountTextField;
    private javax.swing.JComboBox<String> incomeCategoryComboBox;
    private com.toedter.calendar.JDateChooser incomeDateChooser;
    private javax.swing.JTextField incomeDateTextField;
    private javax.swing.JLabel incomeIDLabel;
    private javax.swing.JComboBox<String> incomeModeOfTransactionComboBox;
    private javax.swing.JComboBox<String> incomePayerComboBox;
    private rojerusan.RSTableMetro incomeSummaryTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JLabel totalIncomeLabel;
    private rojerusan.RSMaterialButtonCircle updateIncomeButton;
    // End of variables declaration//GEN-END:variables

    static class StopProcessException extends Exception{}
    static class NullFieldException extends Exception{}
    static class ContactNumberException extends Exception{}
}
