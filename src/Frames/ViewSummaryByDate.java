/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import ProjectDatabaseConnection.ConnectionProvider;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JTable;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author shaun
 */
public class ViewSummaryByDate extends javax.swing.JFrame {

    /**
     * Creates new form ViewSummary
     */
    
    String signInEmail;
    
    public ViewSummaryByDate(String sign_in_email) {
        initComponents();
        
        signInEmail = sign_in_email;
        
        //summaryByDateRadio.isSelected();
        //toDate.setEnabled(false);
        
        dateFlag = 1;
        
        tableDetailsLabel.setText("");
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        summaryRadio = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        backPanel = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        summaryByDateRadio = new javax.swing.JRadioButton();
        summaryByTimeFrameRadio = new javax.swing.JRadioButton();
        allSummaryButton = new rojerusan.RSMaterialButtonCircle();
        summaryIncomeButton = new rojerusan.RSMaterialButtonCircle();
        summaryStartDateTextField = new javax.swing.JTextField();
        startDateLabel = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        summaryStartDateChooser = new com.toedter.calendar.JDateChooser();
        summaryEndDateChooser = new com.toedter.calendar.JDateChooser();
        endDateIcon = new javax.swing.JLabel();
        endDateLabel = new javax.swing.JLabel();
        summaryEndDateTextField = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        summaryExpenseButton = new rojerusan.RSMaterialButtonCircle();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        backPanel1 = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        printSummaryTableButton = new rojerusan.RSMaterialButtonCircle();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        summaryTable = new rojerusan.RSTableMetro();
        tableDetailsLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(340, 210));
        setMinimumSize(new java.awt.Dimension(1360, 750));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backPanel.setBackground(new java.awt.Color(255, 51, 51));
        backPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backPanelMouseClicked(evt);
            }
        });
        backPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText(" Back");
        backPanel.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, -1, 40));

        jPanel1.add(backPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 80, 40));

        summaryRadio.add(summaryByDateRadio);
        summaryByDateRadio.setFont(new java.awt.Font("Sitka Small", 3, 18)); // NOI18N
        summaryByDateRadio.setForeground(new java.awt.Color(255, 255, 255));
        summaryByDateRadio.setText(" Summary By Date");
        summaryByDateRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                summaryByDateRadioActionPerformed(evt);
            }
        });
        jPanel1.add(summaryByDateRadio, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 180, 350, 40));

        summaryRadio.add(summaryByTimeFrameRadio);
        summaryByTimeFrameRadio.setFont(new java.awt.Font("Sitka Small", 3, 18)); // NOI18N
        summaryByTimeFrameRadio.setForeground(new java.awt.Color(255, 255, 255));
        summaryByTimeFrameRadio.setSelected(true);
        summaryByTimeFrameRadio.setText(" Summary within a Time Frame");
        summaryByTimeFrameRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                summaryByTimeFrameRadioActionPerformed(evt);
            }
        });
        jPanel1.add(summaryByTimeFrameRadio, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 250, 350, 40));

        allSummaryButton.setBackground(new java.awt.Color(255, 0, 0));
        allSummaryButton.setText("ALL");
        allSummaryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allSummaryButtonActionPerformed(evt);
            }
        });
        jPanel1.add(allSummaryButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 610, 140, 60));

        summaryIncomeButton.setBackground(new java.awt.Color(255, 0, 0));
        summaryIncomeButton.setText("INCOME");
        summaryIncomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                summaryIncomeButtonActionPerformed(evt);
            }
        });
        jPanel1.add(summaryIncomeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 610, 140, 60));

        summaryStartDateTextField.setEditable(false);
        summaryStartDateTextField.setBackground(new java.awt.Color(0, 51, 51));
        summaryStartDateTextField.setFont(new java.awt.Font("Verdana", 1, 15)); // NOI18N
        summaryStartDateTextField.setForeground(new java.awt.Color(255, 255, 255));
        summaryStartDateTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        summaryStartDateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                summaryStartDateTextFieldActionPerformed(evt);
            }
        });
        jPanel1.add(summaryStartDateTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 380, 240, 30));

        startDateLabel.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        startDateLabel.setForeground(new java.awt.Color(255, 255, 255));
        startDateLabel.setText("Start Date");
        jPanel1.add(startDateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 340, 200, 30));

        jLabel18.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/calendar.png"))); // NOI18N
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 380, -1, -1));

        summaryStartDateChooser.setBackground(new java.awt.Color(75, 137, 243));
        summaryStartDateChooser.setToolTipText("");
        summaryStartDateChooser.setDateFormatString("yyyy-MM-dd");
        summaryStartDateChooser.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        summaryStartDateChooser.setMaxSelectableDate(new java.util.Date(253370748688000L));
        summaryStartDateChooser.setMinSelectableDate(new java.util.Date(-62135785712000L));
        summaryStartDateChooser.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                summaryStartDateChooserPropertyChange(evt);
            }
        });
        jPanel1.add(summaryStartDateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 380, 40, 30));

        summaryEndDateChooser.setBackground(new java.awt.Color(75, 137, 243));
        summaryEndDateChooser.setToolTipText("");
        summaryEndDateChooser.setDateFormatString("yyyy-MM-dd");
        summaryEndDateChooser.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        summaryEndDateChooser.setMaxSelectableDate(new java.util.Date(253370748688000L));
        summaryEndDateChooser.setMinSelectableDate(new java.util.Date(-62135785712000L));
        summaryEndDateChooser.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                summaryEndDateChooserPropertyChange(evt);
            }
        });
        jPanel1.add(summaryEndDateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 500, 40, 30));

        endDateIcon.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        endDateIcon.setForeground(new java.awt.Color(255, 255, 255));
        endDateIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/calendar.png"))); // NOI18N
        jPanel1.add(endDateIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 500, -1, -1));

        endDateLabel.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        endDateLabel.setForeground(new java.awt.Color(255, 255, 255));
        endDateLabel.setText("End Date");
        jPanel1.add(endDateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 460, 290, 30));

        summaryEndDateTextField.setEditable(false);
        summaryEndDateTextField.setBackground(new java.awt.Color(0, 51, 51));
        summaryEndDateTextField.setFont(new java.awt.Font("Verdana", 1, 15)); // NOI18N
        summaryEndDateTextField.setForeground(new java.awt.Color(255, 255, 255));
        summaryEndDateTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        summaryEndDateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                summaryEndDateTextFieldActionPerformed(evt);
            }
        });
        jPanel1.add(summaryEndDateTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 500, 240, 30));

        jPanel9.setBackground(new java.awt.Color(0, 153, 0));
        jPanel9.setForeground(new java.awt.Color(255, 102, 102));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, 260, 6));

        summaryExpenseButton.setBackground(new java.awt.Color(255, 0, 0));
        summaryExpenseButton.setText("EXPENSE");
        summaryExpenseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                summaryExpenseButtonActionPerformed(evt);
            }
        });
        jPanel1.add(summaryExpenseButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 610, 140, 60));

        jSeparator6.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator6.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator6.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 100));
        jPanel1.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 0, 10, 760));

        jLabel3.setFont(new java.awt.Font("Sitka Small", 1, 30)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Summary");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, 170, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 750));

        backPanel1.setBackground(new java.awt.Color(255, 51, 51));
        backPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backPanel1MouseClicked(evt);
            }
        });
        backPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel42.setFont(new java.awt.Font("Verdana", 1, 30)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(255, 255, 255));
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel42.setText("X");
        backPanel1.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 30, 40));

        getContentPane().add(backPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1310, 0, 50, 40));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        printSummaryTableButton.setBackground(new java.awt.Color(255, 0, 0));
        printSummaryTableButton.setText("PRINT");
        printSummaryTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printSummaryTableButtonActionPerformed(evt);
            }
        });
        jPanel2.add(printSummaryTableButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 610, 230, 60));

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 199));
        jPanel2.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 740, 820, 10));

        jSeparator5.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator5.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 199));
        jPanel2.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 880, 10));

        jSeparator4.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator4.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 100));
        jPanel2.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, -10, 10, 760));

        summaryTable.setForeground(new java.awt.Color(102, 102, 255));
        summaryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Income ID", "Date", "Amount", "Payer", "Mode Of Transaction", "Category"
            }
        ));
        summaryTable.setColorBackgoundHead(new java.awt.Color(0, 51, 51));
        summaryTable.setColorBordeFilas(new java.awt.Color(0, 51, 51));
        summaryTable.setColorBordeHead(new java.awt.Color(255, 255, 255));
        summaryTable.setColorFilasBackgound2(new java.awt.Color(255, 255, 255));
        summaryTable.setEditingColumn(0);
        summaryTable.setEditingRow(0);
        summaryTable.setMultipleSeleccion(false);
        summaryTable.setRowHeight(35);
        jScrollPane1.setViewportView(summaryTable);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 770, 420));

        tableDetailsLabel.setFont(new java.awt.Font("Sitka Small", 3, 20)); // NOI18N
        tableDetailsLabel.setText("Table Details");
        jPanel2.add(tableDetailsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 720, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 0, 820, 750));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    // GLOBAL
    int dateFlag = 0;
    String summary_start_date="";
    String summary_end_date="";
     
    private int setDateFormat()
    {
        //FOR ONLY ONE DATE
        if(summaryByDateRadio.isSelected())
        {
            dateFlag = 0;
            summary_start_date = String.valueOf(summaryStartDateChooser.getDate());
            
            // FORMAT DATE
            try
            {
                String dateStr = summary_start_date;
                DateFormat formatter = new SimpleDateFormat("E MMM dd HH:mm:ss Z yyyy");
                java.util.Date startDate = (java.util.Date)formatter.parse(dateStr);
                //System.out.println(startDate);        

                Calendar calStart = Calendar.getInstance();
                calStart.setTime(startDate);
                String startFormatedDate = calStart.get(Calendar.YEAR) + "-" + (calStart.get(Calendar.MONTH) + 1) + "-" +calStart.get(Calendar.DATE);

                summary_start_date = startFormatedDate;
            }
            catch(Exception e)
            {
                System.out.println(e);
                return 1;
                //return;
            }
            
        }
        // FOR TWO DATES
        else if(summaryByTimeFrameRadio.isSelected())
        {
            dateFlag = 1;
                    
            summary_start_date = String.valueOf(summaryStartDateChooser.getDate());
            summary_end_date = String.valueOf(summaryEndDateChooser.getDate()); 
            
            // FORMAT THE INCOME DATE
            try
            {
                // ******* START DATE ********
                String dateStr = summary_start_date;
                DateFormat formatter = new SimpleDateFormat("E MMM dd HH:mm:ss Z yyyy");
                java.util.Date startDate = (java.util.Date)formatter.parse(dateStr);
                //System.out.println(startDate);        

                Calendar calStart = Calendar.getInstance();
                calStart.setTime(startDate);
                String startFormatedDate = calStart.get(Calendar.YEAR) + "-" + (calStart.get(Calendar.MONTH) + 1) + "-" +calStart.get(Calendar.DATE);
                //System.out.println("formatedDate : " + startFormatedDate); 


                // ******* END DATE ********
                dateStr = summary_end_date;
                java.util.Date endDate = (java.util.Date)formatter.parse(dateStr);

                Calendar calEnd = Calendar.getInstance();
                calEnd.setTime(endDate);
                String endFormatedDate = calEnd.get(Calendar.YEAR) + "-" + (calEnd.get(Calendar.MONTH) + 1) + "-" +calEnd.get(Calendar.DATE);


                 // ** COMPARE TWO DATES **
                if(calEnd.get(Calendar.YEAR) < calStart.get(Calendar.YEAR))
                {
                    throw new WrongDatesException();    
                }
                else if(calEnd.get(Calendar.MONTH) < calStart.get(Calendar.MONTH))
                {
                    throw new WrongDatesException(); 
                }
                else if(calEnd.get(Calendar.DATE) < calStart.get(Calendar.DATE))
                {
                    throw new WrongDatesException(); 
                }
                else{}

                summary_end_date = endFormatedDate;
                summary_start_date = startFormatedDate;


                //String formatedDate = cal.get(Calendar.DATE) + "/" + (cal.get(Calendar.MONTH) + 1) + "/" +         cal.get(Calendar.YEAR);
                //System.out.println("formatedDate : " + formatedDate);    
            }

            catch(WrongDatesException e)
            {
                JOptionPane.showMessageDialog(null,"Please select appropriate Start and End dates");
                return 1;
            }

            catch(Exception e)
            {
                System.out.println(e);
                return 1;
                //return;
            }
        }     
        return 0;
    }
    
    private void summaryStartDateChooserPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_summaryStartDateChooserPropertyChange
        // TODO add your handling code here:

        String summaryStartDate = String.valueOf(summaryStartDateChooser.getDate());
        // FORMAT THE INCOME DATE
        try
        {
            String dateStr = summaryStartDate;
            DateFormat formatter = new SimpleDateFormat("E MMM dd HH:mm:ss Z yyyy");
            java.util.Date date = (java.util.Date)formatter.parse(dateStr);
            System.out.println(date);

            Calendar cal = Calendar.getInstance();
            cal.setTime(date);
            String formatedDate = cal.get(Calendar.YEAR) + "-" + (cal.get(Calendar.MONTH) + 1) + "-" +cal.get(Calendar.DATE);
            System.out.println("formatedDate : " + formatedDate);

            summaryStartDate = formatedDate;

            summaryStartDateTextField.setText(summaryStartDate);

            //String formatedDate = cal.get(Calendar.DATE) + "/" + (cal.get(Calendar.MONTH) + 1) + "/" +         cal.get(Calendar.YEAR);
            //System.out.println("formatedDate : " + formatedDate);
            
            
        }
        catch(Exception e)
        {
            System.out.println(e);
            //JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_summaryStartDateChooserPropertyChange

    private void summaryStartDateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_summaryStartDateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_summaryStartDateTextFieldActionPerformed

    private void backPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backPanelMouseClicked
        // TODO add your handling code here:5

        dispose();
        setVisible(false);
        new Home(signInEmail).setVisible(true);
    }//GEN-LAST:event_backPanelMouseClicked

    private void summaryEndDateChooserPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_summaryEndDateChooserPropertyChange
        // TODO add your handling code here:
        String budgetEndDate = String.valueOf(summaryEndDateChooser.getDate());
        // FORMAT THE INCOME DATE
        try
        {
            String dateStr = budgetEndDate;
            DateFormat formatter = new SimpleDateFormat("E MMM dd HH:mm:ss Z yyyy");
            java.util.Date date = (java.util.Date)formatter.parse(dateStr);
            System.out.println(date);

            Calendar cal = Calendar.getInstance();
            cal.setTime(date);
            String formatedDate = cal.get(Calendar.YEAR) + "-" + (cal.get(Calendar.MONTH) + 1) + "-" +cal.get(Calendar.DATE);
            System.out.println("formatedDate : " + formatedDate);

            budgetEndDate = formatedDate;

            summaryEndDateTextField.setText(budgetEndDate);

            //String formatedDate = cal.get(Calendar.DATE) + "/" + (cal.get(Calendar.MONTH) + 1) + "/" +         cal.get(Calendar.YEAR);
            //System.out.println("formatedDate : " + formatedDate);
        }
        catch(Exception e)
        {
            System.out.println(e);
            //JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_summaryEndDateChooserPropertyChange

    private void printSummaryTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printSummaryTableButtonActionPerformed
        // TODO add your handling code here:
        
        try
        {
            summaryTable.print(JTable.PrintMode.FIT_WIDTH);
        }
        catch(Exception e)
        {}   
    }//GEN-LAST:event_printSummaryTableButtonActionPerformed

    private void allSummaryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allSummaryButtonActionPerformed
        // TODO add your handling code here:
        
        //int x = setDateFormat();
//        if(x == 1)
//            return;
        
        // QUERY
        
        summary_start_date = summaryStartDateTextField.getText();
        summary_end_date = summaryEndDateTextField.getText();
        
        if(dateFlag == 1)
        {
            if(summary_start_date.equals("") || summary_end_date.equals(""))
            {
                JOptionPane.showMessageDialog(null, "Please fill all the details");
                return;
            }
        }
        else
        {
            if(summary_start_date.equals(""))
            {
                JOptionPane.showMessageDialog(null, "Please fill all the details");
                return;
            }
        }
        
        
        if(dateFlag == 1)
        {
            // ******************** COMPARE DATES ******************************
            //SET VALUES
            String summaryStartDate = String.valueOf(summaryStartDateChooser.getDate());
            String summaryEndDate = String.valueOf(summaryEndDateChooser.getDate());
        
        
            // FORMAT THE DATE AND CHECK IF START AND END DATES ARE VALID
            try
            {
                // ******* START DATE ********
                String dateStr = summaryStartDate;
                DateFormat formatter = new SimpleDateFormat("E MMM dd HH:mm:ss Z yyyy");
                java.util.Date startDate = (java.util.Date)formatter.parse(dateStr);
                //System.out.println(startDate);

                Calendar calStart = Calendar.getInstance();
                calStart.setTime(startDate);
                //String startFormatedDate = calStart.get(Calendar.YEAR) + "-" + (calStart.get(Calendar.MONTH) + 1) + "-" +calStart.get(Calendar.DATE);
                //System.out.println("formatedDate : " + startFormatedDate);

                // ******* END DATE ********
                dateStr = summaryEndDate;
                java.util.Date endDate = (java.util.Date)formatter.parse(dateStr);

                Calendar calEnd = Calendar.getInstance();
                calEnd.setTime(endDate);
                //String endFormatedDate = calEnd.get(Calendar.YEAR) + "-" + (calEnd.get(Calendar.MONTH) + 1) + "-" +calEnd.get(Calendar.DATE);

                // ** COMPARE TWO DATES **
                if(calEnd.get(Calendar.YEAR) < calStart.get(Calendar.YEAR))
                {
                    throw new WrongDatesException();
                }
                else if(calEnd.get(Calendar.MONTH) < calStart.get(Calendar.MONTH))
                {
                    throw new WrongDatesException();
                }
                else if(calEnd.get(Calendar.DATE) < calStart.get(Calendar.DATE))
                {
                    throw new WrongDatesException();
                }
                else{}

    //            summary_end_date = endFormatedDate;
    //            summary_start_date = startFormatedDate;

                //String formatedDate = cal.get(Calendar.DATE) + "/" + (cal.get(Calendar.MONTH) + 1) + "/" +         cal.get(Calendar.YEAR);
                //System.out.println("formatedDate : " + formatedDate);
            }
            catch(WrongDatesException e)
            {
                JOptionPane.showMessageDialog(null,"Please select appropriate Start and End dates");
                return;
            }
            catch(Exception e)
            {
                System.out.println(e);
                return;
            }
            // ***********************************************************************************
        }

        
        
        
        // EXECUTE QUERY FOR TABLE
        try
        {
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            ResultSet rs;
            
            
            if(dateFlag == 0)
            {
                // PRINT LABEL
                tableDetailsLabel.setText(" All Transaction Details on the date  '"+summary_start_date+"'");
                                
                System.out.println("START : "+summary_start_date);
                rs = st.executeQuery("select transaction_type as Transaction, transaction_date as Date, transaction_amount as Amount, transaction_category as Category, transaction_beneficiary as Beneficiary from Transaction where transaction_date='"+summary_start_date+"' and user_email='"+signInEmail+"'");
                summaryTable.setModel(DbUtils.resultSetToTableModel(rs));
            }
            else if(dateFlag == 1)
            {
                // PRINT LABEL
                tableDetailsLabel.setText(" All Transaction Details from  '"+summary_start_date+"'  to  '"+summary_end_date+"'");
                
                rs = st.executeQuery("select transaction_type as Transaction, transaction_date as Date, transaction_amount as Amount, transaction_category as Category, transaction_beneficiary as Beneficiary from Transaction where user_email='"+signInEmail+"' and transaction_date BETWEEN '"+summary_start_date+"' and '"+summary_end_date+"'");
                summaryTable.setModel(DbUtils.resultSetToTableModel(rs));
            }
          
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_allSummaryButtonActionPerformed

    private void summaryIncomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_summaryIncomeButtonActionPerformed
        // TODO add your handling code here:
        
//        int x = setDateFormat();
//        if(x == 1)
//            return;

        summary_start_date = summaryStartDateTextField.getText();
        summary_end_date = summaryEndDateTextField.getText();
        
        if(dateFlag == 1)
        {
            if(summary_start_date.equals("") || summary_end_date.equals(""))
            {
                JOptionPane.showMessageDialog(null, "Please fill all the details");
                return;
            }
        }
        else
        {
            if(summary_start_date.equals(""))
            {
                JOptionPane.showMessageDialog(null, "Please fill all the details");
                return;
            }
        }

        if(dateFlag == 1)
        {
            // ******************** COMPARE DATES ******************************
            //SET VALUES
            String summaryStartDate = String.valueOf(summaryStartDateChooser.getDate());
            String summaryEndDate = String.valueOf(summaryEndDateChooser.getDate());

            // FORMAT THE DATE AND CHECK IF START AND END DATES ARE VALID
            try
            {
                // ******* START DATE ********
                String dateStr = summaryStartDate;
                DateFormat formatter = new SimpleDateFormat("E MMM dd HH:mm:ss Z yyyy");
                java.util.Date startDate = (java.util.Date)formatter.parse(dateStr);
                //System.out.println(startDate);

                Calendar calStart = Calendar.getInstance();
                calStart.setTime(startDate);
                //String startFormatedDate = calStart.get(Calendar.YEAR) + "-" + (calStart.get(Calendar.MONTH) + 1) + "-" +calStart.get(Calendar.DATE);
                //System.out.println("formatedDate : " + startFormatedDate);

                // ******* END DATE ********
                dateStr = summaryEndDate;
                java.util.Date endDate = (java.util.Date)formatter.parse(dateStr);

                Calendar calEnd = Calendar.getInstance();
                calEnd.setTime(endDate);
                //String endFormatedDate = calEnd.get(Calendar.YEAR) + "-" + (calEnd.get(Calendar.MONTH) + 1) + "-" +calEnd.get(Calendar.DATE);

                // ** COMPARE TWO DATES **
                if(calEnd.get(Calendar.YEAR) < calStart.get(Calendar.YEAR))
                {
                    throw new WrongDatesException();
                }
                else if(calEnd.get(Calendar.MONTH) < calStart.get(Calendar.MONTH))
                {
                    throw new WrongDatesException();
                }
                else if(calEnd.get(Calendar.DATE) < calStart.get(Calendar.DATE))
                {
                    throw new WrongDatesException();
                }
                else{}

    //            summary_end_date = endFormatedDate;
    //            summary_start_date = startFormatedDate;

                //String formatedDate = cal.get(Calendar.DATE) + "/" + (cal.get(Calendar.MONTH) + 1) + "/" +         cal.get(Calendar.YEAR);
                //System.out.println("formatedDate : " + formatedDate);
            }
            catch(WrongDatesException e)
            {
                JOptionPane.showMessageDialog(null,"Please select appropriate Start and End dates");
                return;
            }
            catch(Exception e)
            {
                System.out.println(e);
                return;
            }
            // ***********************************************************************************
        }
        

        // QUERY
        try
        {
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            ResultSet rs;
            
            if(dateFlag == 0)
            {
                // PRINT LABEL
                tableDetailsLabel.setText(" All Income Details on the date  '"+summary_start_date+"'");
                
                System.out.println("START : "+summary_start_date);
                rs = st.executeQuery("select income_expense_id as 'Income ID', transaction_date as Date, transaction_amount as Amount, transaction_category as Category, transaction_beneficiary as Beneficiary from Transaction where transaction_type='Income' and transaction_date='"+summary_start_date+"' and user_email='"+signInEmail+"'");
                summaryTable.setModel(DbUtils.resultSetToTableModel(rs));
            }
            else if(dateFlag == 1)
            {
                // PRINT LABEL
                tableDetailsLabel.setText(" All Income Details from  '"+summary_start_date+"'  to  '"+summary_end_date+"'");
                                
                rs = st.executeQuery("select income_expense_id as 'Income ID', transaction_date as Date, transaction_amount as Amount, transaction_category as Category, transaction_beneficiary as Beneficiary from Transaction where transaction_type='Income' and user_email='"+signInEmail+"' and transaction_date BETWEEN '"+summary_start_date+"' and '"+summary_end_date+"'");
                summaryTable.setModel(DbUtils.resultSetToTableModel(rs));
            }
          
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_summaryIncomeButtonActionPerformed

    private void backPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backPanel1MouseClicked
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(new ExpenseManager(),"Sure? You want to exit?", "Expense Manager", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if(result == JOptionPane.YES_OPTION)
            System.exit(0);
    }//GEN-LAST:event_backPanel1MouseClicked

    private void summaryEndDateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_summaryEndDateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_summaryEndDateTextFieldActionPerformed

    private void summaryByDateRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_summaryByDateRadioActionPerformed
        // TODO add your handling code here:
        
        if(summaryByDateRadio.isEnabled())
        {
            // CLEAR TEXT FIELD AND LABELs
            summaryStartDateTextField.setText("");
            summaryEndDateTextField.setText("");
            tableDetailsLabel.setText("");
            
            // Disable end label
            endDateLabel.setVisible(false);
            endDateIcon.setVisible(false);
            summaryEndDateTextField.setVisible(false);
            summaryEndDateChooser.setVisible(false);
            
            // Change title
            startDateLabel.setText("Select any Date");
            
            dateFlag = 0;
        }
        
    }//GEN-LAST:event_summaryByDateRadioActionPerformed

    private void summaryByTimeFrameRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_summaryByTimeFrameRadioActionPerformed
        // TODO add your handling code here:
        
        if(summaryByTimeFrameRadio.isEnabled())
        {
            // CLEAR TEXT FIELD AND LABELs
            summaryStartDateTextField.setText("");
            summaryEndDateTextField.setText("");
            tableDetailsLabel.setText("");
            
            // Disable end label
            endDateLabel.setVisible(true);
            endDateIcon.setVisible(true);
            summaryEndDateTextField.setVisible(true);
            summaryEndDateChooser.setVisible(true);
            
            // Change title
            startDateLabel.setText("Start Date");
            
            dateFlag = 1;
        }

    }//GEN-LAST:event_summaryByTimeFrameRadioActionPerformed

    private void summaryExpenseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_summaryExpenseButtonActionPerformed
        // TODO add your handling code here:
        //int x = setDateFormat();
//        if(x == 1)
//            return;
        
        summary_start_date = summaryStartDateTextField.getText();
        summary_end_date = summaryEndDateTextField.getText();

        if(dateFlag == 1)
        {
            if(summary_start_date.equals("") || summary_end_date.equals(""))
            {
                JOptionPane.showMessageDialog(null, "Please fill all the details");
                return;
            }
        }
        else
        {
            if(summary_start_date.equals(""))
            {
                JOptionPane.showMessageDialog(null, "Please fill all the details");
                return;
            }
        }

        if(dateFlag == 1)
        {
            // ******************** COMPARE DATES ******************************
            //SET VALUES
            String summaryStartDate = String.valueOf(summaryStartDateChooser.getDate());
            String summaryEndDate = String.valueOf(summaryEndDateChooser.getDate());

            // FORMAT THE DATE AND CHECK IF START AND END DATES ARE VALID
            try
            {
                // ******* START DATE ********
                String dateStr = summaryStartDate;
                DateFormat formatter = new SimpleDateFormat("E MMM dd HH:mm:ss Z yyyy");
                java.util.Date startDate = (java.util.Date)formatter.parse(dateStr);
                //System.out.println(startDate);

                Calendar calStart = Calendar.getInstance();
                calStart.setTime(startDate);
                //String startFormatedDate = calStart.get(Calendar.YEAR) + "-" + (calStart.get(Calendar.MONTH) + 1) + "-" +calStart.get(Calendar.DATE);
                //System.out.println("formatedDate : " + startFormatedDate);

                // ******* END DATE ********
                dateStr = summaryEndDate;
                java.util.Date endDate = (java.util.Date)formatter.parse(dateStr);

                Calendar calEnd = Calendar.getInstance();
                calEnd.setTime(endDate);
                //String endFormatedDate = calEnd.get(Calendar.YEAR) + "-" + (calEnd.get(Calendar.MONTH) + 1) + "-" +calEnd.get(Calendar.DATE);

                // ** COMPARE TWO DATES **
                if(calEnd.get(Calendar.YEAR) < calStart.get(Calendar.YEAR))
                {
                    throw new WrongDatesException();
                }
                else if(calEnd.get(Calendar.MONTH) < calStart.get(Calendar.MONTH))
                {
                    throw new WrongDatesException();
                }
                else if(calEnd.get(Calendar.DATE) < calStart.get(Calendar.DATE))
                {
                    throw new WrongDatesException();
                }
                else{}

    //            summary_end_date = endFormatedDate;
    //            summary_start_date = startFormatedDate;

                //String formatedDate = cal.get(Calendar.DATE) + "/" + (cal.get(Calendar.MONTH) + 1) + "/" +         cal.get(Calendar.YEAR);
                //System.out.println("formatedDate : " + formatedDate);
            }
            catch(WrongDatesException e)
            {
                JOptionPane.showMessageDialog(null,"Please select appropriate Start and End dates");
                return;
            }
            catch(Exception e)
            {
                System.out.println(e);
                return;
            }
            // ***********************************************************************************
        }

        // QUERY
        try
        {
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            ResultSet rs;
            
            if(dateFlag == 0)
            {
                // PRINT LABEL
                tableDetailsLabel.setText(" All Expense Details on the date '"+summary_start_date+"'");
                
                System.out.println("START : "+summary_start_date);
                rs = st.executeQuery("select income_expense_id as 'Expense ID', transaction_date as Date, transaction_amount as Amount, transaction_category as Category, transaction_beneficiary as Beneficiary from Transaction where transaction_type='Expense' and transaction_date='"+summary_start_date+"' and user_email='"+signInEmail+"'");
                summaryTable.setModel(DbUtils.resultSetToTableModel(rs));
            }
            else if(dateFlag == 1)
            {
                // PRINT LABEL
                tableDetailsLabel.setText(" All Expense Details from  '"+summary_start_date+"'  to  '"+summary_end_date+"'");
                
                rs = st.executeQuery("select income_expense_id as 'Expense ID', transaction_date as Date, transaction_amount as Amount, transaction_category as Category, transaction_beneficiary as Beneficiary from Transaction where transaction_type='Expense' and user_email='"+signInEmail+"' and transaction_date BETWEEN '"+summary_start_date+"' and '"+summary_end_date+"'");
                summaryTable.setModel(DbUtils.resultSetToTableModel(rs));
            }
          
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_summaryExpenseButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewSummaryByDate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewSummaryByDate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewSummaryByDate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewSummaryByDate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewSummaryByDate("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojerusan.RSMaterialButtonCircle allSummaryButton;
    private javax.swing.JPanel backPanel;
    private javax.swing.JPanel backPanel1;
    private javax.swing.JLabel endDateIcon;
    private javax.swing.JLabel endDateLabel;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private rojerusan.RSMaterialButtonCircle printSummaryTableButton;
    private javax.swing.JLabel startDateLabel;
    private javax.swing.JRadioButton summaryByDateRadio;
    private javax.swing.JRadioButton summaryByTimeFrameRadio;
    private com.toedter.calendar.JDateChooser summaryEndDateChooser;
    private javax.swing.JTextField summaryEndDateTextField;
    private rojerusan.RSMaterialButtonCircle summaryExpenseButton;
    private rojerusan.RSMaterialButtonCircle summaryIncomeButton;
    private javax.swing.ButtonGroup summaryRadio;
    private com.toedter.calendar.JDateChooser summaryStartDateChooser;
    private javax.swing.JTextField summaryStartDateTextField;
    private rojerusan.RSTableMetro summaryTable;
    private javax.swing.JLabel tableDetailsLabel;
    // End of variables declaration//GEN-END:variables
    
    private static class WrongDatesException extends Exception {}
    private static class NoRadioSelectedException extends Exception {}
    private static class NullFieldException extends Exception {}
}
